on: [push, pull_request, workflow_dispatch]

name: CI

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-gnu
        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe
    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - name: Install build dependencies - Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable --profile default --target ${{ matrix.TARGET }} -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    # For linux, it's necessary to use cross from the git repository to avoid glibc problems
    # Ref: https://github.com/cross-rs/cross/issues/1510
    - name: Install cross for linux
      if: contains(matrix.TARGET, 'linux')
      run: |
        cargo install cross --git https://github.com/cross-rs/cross --rev 1b8cf50d20180c1a394099e608141480f934b7f7

    - name: Install cross for mac and windows
      if: ${{ !contains(matrix.TARGET, 'linux') }}
      run: |
        cargo install cross

    - name: Build
      run: |
        cross build --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/tpvui${{ matrix.EXTENSION }} tpvui-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: tpvui-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: tpvui-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: tpvui-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        asset_name: tpvui-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        overwrite: true
